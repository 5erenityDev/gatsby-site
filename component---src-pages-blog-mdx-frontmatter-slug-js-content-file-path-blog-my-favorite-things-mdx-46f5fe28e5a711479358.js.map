{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-my-favorite-things-mdx-46f5fe28e5a711479358.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/layout.module.css","webpack://my-gatsby-site/./src/components/layout.js","webpack://my-gatsby-site/./src/components/seo.js","webpack://my-gatsby-site/./blog/my-favorite-things.mdx","webpack://my-gatsby-site/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://my-gatsby-site/../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle,\r\n} from './layout.module.css'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={container}>\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/\" className={navLinkText}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/about\" className={navLinkText}>\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/blog\" className={navLinkText}>\r\n              Blog\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/recipes\" className={navLinkText}>\r\n              Recipes\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post!\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Low-Poly 3D Modeling.\"), \"\\n\", React.createElement(_components.li, null, \"Video Games.\"), \"\\n\", React.createElement(_components.li, null, \"Campfires with friends and family.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/serenity_dev/my-gatsby-site/blog/my-favorite-things.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["navLinkItem","navLinkText","_ref","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","_createMdxContent","props","_components","Object","assign","p","strong","ul","li","_provideComponents","components","wrapper","MDXLayout","BlogPost","Layout","mdx","frontmatter","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}